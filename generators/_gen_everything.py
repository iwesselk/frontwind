import os
import requests
from bs4 import BeautifulSoup

stupid_template = """
class {NAME}(Enum):
{DOCS}{BLAHBLAH}
"""


def magic_text(text):
    return str(text).upper().replace("-", "_").replace(".", "_")


def gen_from_list(name, lst, docs = None):
    totalstring = []
    for i in lst:
        totalstring.append("    {} = \"{}\"".format(magic_text(i), i))
    doc_write=""
    if docs:
        doc_write = "    \"\"\"{}\"\"\"\n".format(docs)
    return stupid_template.format(NAME=name, DOCS=doc_write, BLAHBLAH="\n".join(totalstring))


def grab_page(address):
    r = requests.get(address)
    if r.status_code == 200:
        return r.content
    else:
        print("Bad url", address)
        return ""


def grab_class_list(content):
    page = BeautifulSoup(content, features="html.parser")
    table_elements = page.find("table").find_all('td', class_="text-violet-600")
    return [i.contents[0] for i in table_elements]


def grab_description(content):
    page = BeautifulSoup(content, features="html.parser")
    description = page.find("p", class_="mt-1 text-lg text-gray-500").contents[0]
    return description


def full_pipe(page):
    content = grab_page(page)
    return (grab_class_list(content), grab_description(content))


def process_name(url):
    tail_name = os.path.split(url)[1]
    return "".join([i.capitalize() for i in tail_name.split("-")])


def generate_file(path, lst):
    print("==={}===".format(path))
    with open(path, "w") as f:
        f.write("\"\"\"\nWARNING: THIS FILE IS AUTOMATICALLY GENERATED FROM _gen_everything.py\n\"\"\"")
        f.write("\n")
        f.write("from enum import Enum")
        f.write("\n")
        for c in lst:
            url = c
            name = process_name(c)
            print(name)
            #print(url, name)
            fp = full_pipe(url)
            docs = fp[1] + "\n    " + "Tailwind documentation URL: {}".format(url) 
            f.write(gen_from_list(name, fp[0], docs=docs))
            f.write("\n")


Spacing = ["https://tailwindcss.com/docs/padding",
        "https://tailwindcss.com/docs/margin",
        "https://tailwindcss.com/docs/space"]

Typography = ["https://tailwindcss.com/docs/font-family",
            "https://tailwindcss.com/docs/font-size",
            "https://tailwindcss.com/docs/font-smoothing",
            "https://tailwindcss.com/docs/font-style",
            "https://tailwindcss.com/docs/font-weight",
            "https://tailwindcss.com/docs/font-variant-numeric",
            "https://tailwindcss.com/docs/letter-spacing",
            "https://tailwindcss.com/docs/line-height",
            "https://tailwindcss.com/docs/list-style-type",
            "https://tailwindcss.com/docs/list-style-position",
            "https://tailwindcss.com/docs/placeholder-color",
            "https://tailwindcss.com/docs/placeholder-opacity",
            "https://tailwindcss.com/docs/text-align",
            "https://tailwindcss.com/docs/text-color",
            "https://tailwindcss.com/docs/text-opacity",
            "https://tailwindcss.com/docs/text-decoration",
            "https://tailwindcss.com/docs/text-transform",
            "https://tailwindcss.com/docs/text-overflow",
            "https://tailwindcss.com/docs/vertical-align",
            "https://tailwindcss.com/docs/whitespace",
            "https://tailwindcss.com/docs/word-break"]

Backgrounds = ["https://tailwindcss.com/docs/background-attachment",
            "https://tailwindcss.com/docs/background-clip",
            "https://tailwindcss.com/docs/background-color",
            "https://tailwindcss.com/docs/background-opacity",
            "https://tailwindcss.com/docs/background-origin",
            "https://tailwindcss.com/docs/background-position",
            "https://tailwindcss.com/docs/background-repeat",
            "https://tailwindcss.com/docs/background-size",
            "https://tailwindcss.com/docs/background-image",
            "https://tailwindcss.com/docs/gradient-color-stops"]

Borders = ["https://tailwindcss.com/docs/border-radius",
        "https://tailwindcss.com/docs/border-width",
        "https://tailwindcss.com/docs/border-color",
        "https://tailwindcss.com/docs/border-opacity",
        "https://tailwindcss.com/docs/border-style",
        "https://tailwindcss.com/docs/divide-width",
        "https://tailwindcss.com/docs/divide-color",
        "https://tailwindcss.com/docs/divide-opacity",
        "https://tailwindcss.com/docs/divide-style",
        "https://tailwindcss.com/docs/ring-width",
        "https://tailwindcss.com/docs/ring-color",
        "https://tailwindcss.com/docs/ring-opacity",
        "https://tailwindcss.com/docs/ring-offset-width",
        "https://tailwindcss.com/docs/ring-offset-color"]

generate_file("./src/spacing.py", Spacing)
generate_file("./src/typography.py", Typography)
generate_file("./src/backgrounds.py", Backgrounds)
generate_file("./src/borders.py", Borders)

# for key, value in Typography.items():
#     print(_genstupid.gen_from_list(key, full_pipe(value)))
#     print()